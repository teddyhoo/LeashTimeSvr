<? // appointment-map.php
require_once "common/init_session.php";
require_once "remote-file-storage-fns.php";
require_once "preference-fns.php";


// params
// id (optional) the appointmentid of the photo to be returned
// token (optional)
// nugget - encoded id and bizid
// 

//IGNORE: 
// passthru (optional) - when supplied by the URL in a response token row, no credentials are required
//   but we must confirm that the token row actually points to the same filecacheid
// passthru (response.php) URLs are generated by getCachedFilePublicURL($cacheORfilecacheid) in remote-file-storage-fns.php

extract(extractVars('loginid,password,id,token,nugget,generate', $_REQUEST));

if($generate) {
	require_once "appointment-client-notification-fns.php";
	require_once "encryption.php";
	locked('o-');
	echo "https:/LeashTime.com/appointment-map.php?nugget=".visitReportDataPacketNugget($_REQUEST['id']);
	exit;
}
else if($loginid && $password) {
	require_once "native-sitter-api.php";
	if(is_string($userOrFailure = requestSessionAuthentication($loginid, $password))) {
		echo $userOrFailure;
		ditch();
	}
	$user = $userOrFailure;
	$biz = fetchFirstAssoc("SELECT * FROM tblpetbiz WHERE bizid = {$user['bizptr']} LIMIT 1");
	reconnectPetBizDB($biz['db'], $biz['dbhost'], $biz['dbuser'], $biz['dbpass'], 1);
}
else if($token) { // available to anyone
	// find the the appointmentid and bizid for this token  $_SESSION['bizptr']
	require_once 'response-token-fns.php';
	list($dbhost1, $db1, $dbuser1, $dbpass1) = array($dbhost, $db, $dbuser, $dbpass);
	require_once "common/init_db_common.php";
	$tokenRow = (array)findTokenRow($token);
	$filecacheid = -99999;
	if($tokenRow) {
		$mapBiz = fetchFirstASSOC("SELECT * FROM tblpetbiz WHERE bizid = '{$tokenRow['bizptr']}' LIMIT 1", 1);
		if($mapBiz) {
			reconnectPetBizDB($mapBiz['db'], $mapBiz['dbhost'], $mapBiz['dbuser'], $mapBiz['dbpass'], 1);
			$notAURL = $tokenRow['url']; // "appointment_photo=1&appointmentid=$appointmentid&token="$appointmentid = 
			foreach(explode('&', "".$notAURL) as $prop) {
				$prop = explode('=', $prop);
				if(count($prop) == 2) $props[$prop[0]] = $prop[1];
			};
			if($props['token'] != $token || !$props['appointmentid']) $filecacheid = -99999;
			else {
				$filecacheid = getAppointmentProperty($props['appointmentid'], 'visitmapcacheid');
				$filecacheid = $filecacheid ? $filecacheid : -99999;
				$dumped = dumpCachedImage($filecacheid);
			}
		}
		// back out gracefully...
		if(!$dumped) dumpCachedImage($filecacheid);
		if($db1) reconnectPetBizDB($db1, $dbhost1, $dbuser1, $dbpass1, 1);
		ditch();
	}
}
else if($nugget) {
	require_once "common/init_session.php";
	require_once "common/init_db_common.php";
	require_once "encryption.php";
	$params = lt_decrypt($_GET['nugget']);
	$params = explode('&', $params);
	foreach($params as $part) {
		$keyValue = explode('=', $part);
		if($keyValue[0] == 'bizid') $bizid = $keyValue[1];
		else if($keyValue[0] == 'id') $nuggetid = $keyValue[1];
	}
	if(!($bizid && $nuggetid))
	  $error = "Information unavailable (code H)";// "H" for hacked
	else {
		$_SESSION['bizptr'] = $bizid;
		$_SESSION["rights"] = 'c-';
		$biz = fetchFirstAssoc("SELECT * FROM tblpetbiz WHERE bizid = '$bizid' AND activebiz = 1");
		if(!$biz) $error = "Information unavailable (code B)"; // "B" for business not found
		else reconnectPetBizDB($biz['db'], $biz['dbhost'], $biz['dbuser'], $biz['dbpass'], 1);
		$_SESSION["preferences"] = fetchKeyValuePairs("SELECT property,value FROM tblpreference");
		$id = $nuggetid;
	}
}
else if($id) {
	// if user is logged in
	if($userRole = userRole()) {
		// should we check for ownership/access here?
		locked("$userRole-");
	}
}
else {
	list($dbhost1, $db1, $dbuser1, $dbpass1) = array($dbhost, $db, $dbuser, $dbpass);
	require_once "common/init_db_common.php";
	locked('+o-,+p-');
}

if($token = $_REQUEST['passthru']) {
	// if(passthru) this request should have come through response.php
		require_once 'response-token-fns.php';
	// look up the passthru token 
	list($dbhost1, $db1, $dbuser1, $dbpass1) = array($dbhost, $db, $dbuser, $dbpass);
	require_once "common/init_db_common.php";
	$tokenRow = (array)findTokenRow($token);
	reconnectPetBizDB($db1, $dbhost1, $dbuser1, $dbpass1, 1);
	
	// if the URL there does not contain id={$_REQUEST['id']}, this is not a legit request
	if(strpos($tokenRow['url'],"id=$id") === FALSE) {
		dumpCachedImage(-99999);
		ditch();
	}
}

function ditch() {
		
	global $loginid, $password;
	if(($loginid && $password) || $_SESSION["burnafterreading"]) endRequestSession();
	exit;
}


$id = $id ? $id : $_REQUEST['id'];
// if not token, any sitter or manager may see this photo, or the client
if(!$token && !$nugget) {
	require_once "common/init_db_petbiz.php";
	$userRole = $userRole ? $userRole : userRole();
	if(in_array($userRole, array('o', 'd', 'p'))) $continue = 1;
	else if($userRole == 'c') {
		locked('c-');
		$clientid = fetchRow0Col0("SELECT clientptr FROM tblappointment WHERE appointmentid = '$id' LIMIT 1", 1);
		if($_SESSION["clientid"] == $clientid) $continue = 1;
	}
	
	if(!$continue) {
		dumpCachedImage(-99999);
		ditch();
	}
}

$filecacheid = getAppointmentProperty($id, 'visitmapcacheid');
//if(!$filecacheid) echo "OIK $id:".$filecacheid;ditch();


//if($_REQUEST['maxdims']) $maxDims = explode(',', $_REQUEST['maxdims']);
if($_REQUEST['maxdims']) $maxDims = $_REQUEST['maxdims'];
dumpCachedImage($filecacheid, $maxDims);
ditch();
